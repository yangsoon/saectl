name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

env:
  BUCKET: ${{ secrets.CLI_OSS_BUCKET }}
  ENDPOINT: ${{ secrets.CLI_OSS_ENDPOINT }}
  ACCESS_KEY: ${{ secrets.CLI_OSS_ACCESS_KEY }}
  ACCESS_KEY_SECRET: ${{ secrets.CLI_OSS_ACCESS_KEY_SECRET }}
  GITHUB_TOKEN: ${{ secrets.TOKEN }}

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write
      actions: read
      checks: write
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read
    runs-on: ubuntu-latest
    name: goreleaser
    steps:
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
        with:
          go-version: 1.19
          cache: false
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b # v4.2.0
        with:
          distribution: goreleaser
          version: 1.14.1
          args: release --rm-dist --timeout 60m
          workdir: "./gomod"
      # Since goreleaser haven't supported aliyun OSS, we need to upload the release manually
      - name: Get version
        run: echo "SAE_CTL_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Install ossutil
        run: wget http://gosspublic.alicdn.com/ossutil/1.7.0/ossutil64 && chmod +x ossutil64 && mv ossutil64 ossutil
        working-directory: ./gomod
      - name: Configure Alibaba Cloud OSSUTIL
        run: ./ossutil --config-file .ossutilconfig config -i ${ACCESS_KEY} -k ${ACCESS_KEY_SECRET} -e ${ENDPOINT}
        working-directory: ./gomod
      - name: Split files to be upload
        run: mkdir -p ./dist/files_upload && mv ./dist/*.tar.gz ./dist/files_upload
        working-directory: ./gomod
      - name: Sync local to cloud
        run: ./ossutil --config-file .ossutilconfig sync ./dist/files_upload oss://$BUCKET/saectl/${{ env.SAE_CTL_VERSION }}
        working-directory: ./gomod
      - name: Create symlink to latest version
        run: |
          files=$(ls ./dist/files_upload)
          for file in $files
          do
            latest_arc=$(echo $file | sed -r 's/${{ env.SAE_CTL_VERSION }}/latest/g')
            ./ossutil --config-file .ossutilconfig create-symlink oss://$BUCKET/saectl/latest/$latest_arc oss://$BUCKET/saectl/${{ env.SAE_CTL_VERSION }}/$file
          done
        working-directory: ./gomod
